{"version":3,"sources":["assets/img/download (1).jfif","components/LoadingComponent/LoadingComponent.module.css","util/constants/settingSystem.js","assets/imgLoading/loading.gif","assets/img/download.jfif","pages/Home/Home.js","pages/CreateProject/CreateProject.js","components/Cyberbugs/Main/ContentMain.js","redux/constants/CyberBugs.js","components/Cyberbugs/Main/HeaderMain.js","components/Cyberbugs/Main/InfoMain.js","pages/ProjectDetail/indexCyberBugs.js","components/Cyberbugs/Forms/FormEditProject/FormEditProject.js","pages/ProjectManagement/ProjectManagement.js","templates/HomeTemplate/UserLoginTemplate.js","components/LoadingComponent/LoadingComponent.js","pages/LoginCyberBugs/LoginCyberBugs.js","redux/actions/CyberBugsAction.js","templates/HomeTemplate/HomeTemplate.js","components/Cyberbugs/MenuCyberbugs.js","components/Cyberbugs/ModalCyberBugs.js","components/Cyberbugs/Forms/FormCreateTask/FormCreateTask.js","components/Cyberbugs/SidebarCyberbugs.js","templates/HomeTemplate/CyberbugsTemplate.js","HOC/DrawerCyberBugs.js","App.js","services/CyberbugsService.js","util/history.js","services/baseService.js","services/UserService.js","redux/sagas/Cyberbugs/UserCyberbugsSaga.js","redux/sagas/Cyberbugs/ProjectCategorySaga.js","services/ProjectService.js","util/Notification/notificationCyberbugs.js","redux/sagas/Cyberbugs/ProjectSaga.js","services/TaskTypeService.js","redux/sagas/Cyberbugs/TaskTypeSaga.js","services/PriorityService.js","redux/sagas/Cyberbugs/PrioritySaga.js","services/TaskService.js","redux/sagas/Cyberbugs/TaskSaga.js","services/StatusService.js","redux/sagas/Cyberbugs/StatusSaga.js","redux/sagas/rootSaga.js","redux/reducers/HistoryReducer.js","redux/reducers/UserCyberBugsReducer.js","redux/reducers/ProjectCategoryReducer.js","redux/reducers/ProjectCyberBugsReducer.js","redux/reducers/DrawerCyberbugs.js","redux/reducers/ProjectReducer.js","redux/reducers/TaskTypeReducer.js","redux/reducers/PriorityReducer.js","redux/reducers/StatusReducer.js","redux/reducers/TaskReducer.js","redux/reducers/LoadingReducer.js","redux/configStore.js","index.js"],"names":["module","exports","DOMAIN_CYBERBUG","TOKEN","USER_LOGIN","STATUS_CODE","SUCCESS","NOT_FOUND","SERVER_ERROR","Home","createProjectForm","withFormik","enableReinitialize","mapPropsToValues","props","projectName","description","categoryId","arrProjectCategory","id","validationSchema","Yup","shape","handleSubmit","values","setSubmitting","dispatch","type","newProject","displayName","useSelector","state","ProjectCategoryReducer","useDispatch","handleChange","setFieldValue","useEffect","className","onSubmit","onChange","name","init","selector","height","menubar","plugins","toolbar","onEditorChange","content","editor","map","item","index","value","key","projectCategoryName","connect","ContentMain","projectDetail","handleDragEnd","result","JSON","parse","draggableId","projectId","taskId","console","log","source","destination","droppableId","taskUpdateStatus","style","display","onDragEnd","lstTask","taskListDetail","statusId","provided","width","statusName","ref","innerRef","droppableProps","lstTaskDeTail","task","toString","stringify","draggableProps","dragHandleProps","data-toggle","data-target","onClick","taskName","priorityTask","priority","assigness","mem","src","avatar","alt","placeholder","renderCardTaskList","HeaderMain","aria-label","backgroundColor","aria-current","InfoMain","ReactHtmlParser","members","user","renderAvatar","marginLeft","IndexCyberBugs","ProjectReducer","match","params","EditProjectForm","projectEdit","prjectUpdate","touched","errors","handleBlur","setValues","submitFunction","disabled","initialValue","ProjectManagement","projectList","ProjectCyberBugsReducer","userSearch","UserLoginCyberBugsReducer","useState","setValue","searchRef","useRef","filteredInfo","sortedInfo","setState","columns","title","dataIndex","sorter","item2","item1","sortDirections","render","text","record","to","projectName1","trim","toLowerCase","categoryName1","categoryName","color","creator","creator1","slice","member","placement","userId","borderRadius","userProject","length","options","label","onSelect","valueSelect","option","onSearch","current","clearTimeout","setTimeout","keyWord","trigger","Component","projectEditModel","FormOutlined","fontSize","onConfirm","idProject","okText","cancelText","DeleteOutlined","marginBottom","order","columnKey","rowKey","dataSource","pagination","filters","Sider","Layout","Content","UserLoginTemplate","Math","round","window","innerWidth","innerHeight","setSize","onresize","restRoute","propsRoute","backgroundImage","backgroundSize","LoadingComponent","LoadingReducer","isLoading","styleLoading","bgLoading","require","LoginCyberBugsWithFormik","email","password","required","min","max","userLogin","singinCyberbugAction","fontWeight","minWidth","size","prefix","UserOutlined","LockOutlined","htmlType","icon","TwitterOutlined","HomeTemplate","restParam","MenuCyberbugs","activeStyle","activeClassName","Select","Option","ModalCyberBugs","taskDetailModal","TaskReducer","arrStatus","StatusReducer","arrPriority","PriorityReducer","arrTaskType","TaskTypeReducer","visibleEditor","setVisibleEditor","historyContent","setHistoryContent","setContent","e","target","actionType","tabIndex","role","aria-labelledby","aria-hidden","typeId","tp","taskType","paddingRight","cursor","data-dismiss","jsxDescription","renderDescription","background","status","filter","findIndex","us","optionFilterProp","userSelected","find","priorityId","originalEstimate","timeTrackingSpent","timeTrackingRemaining","Number","percent","aria-valuenow","aria-valuemin","aria-valuemax","justifyContent","renderTimeTracking","children","i","push","frmCreateTask","arrProject","listUserAsign","taskObject","arrUser","userOptions","React","timeTracking","setTimetracking","project","statusItem","mode","defaultValue","marginTop","Header","SidebarCyberbugs","collapsed","collapsible","BarsOutlined","theme","defaultSelectedKeys","Item","PlusOutlined","SearchOutlined","CyberbugsTemplate","DrawerCyberBugs","drawerReducer","visible","ComponentContentDrawer","callBackSubmit","onClose","bodyStyle","paddingBottom","footer","textAlign","marginRight","App","path","exact","CreateProject","LoginCyberBugs","indexCyberBugs","Axios","default","cyberbugsService","url","method","data","localStorage","getItem","headers","projectUpdate","history","createBrowserHistory","baseService","put","model","post","get","delete","userService","getUser","assignUserProject","deleteUserFromProject","getUserByProjectId","signinSaga","theoDoiSignin","getUserSaga","theoDoiGetUser","addUserProjectSaga","theoDoiAddUserProject","removeUserProjectSaga","theoDoiRemoveUserProject","getUserByProjectIdSaga","theoDoiGetUserByProjectIdSaga","action","delay","call","setItem","accessToken","response","takeLatest","lstUserSearch","statusCode","getAllProjectCategorySaga","theoDoigetAllProjectCategory","projectService","getAllProject","deleteProject","getProjectDetail","notifiFunction","message","notification","createProjectSaga","theoDoiCreateProjectSaga","getListProjectSaga","theoDoiGetListProjectSaga","updateProjectSaga","theoDoiUpdateProjectSaga","deleteProjectSaga","theoDoiDeleteProject","getProjectDetailSaga","theoDoiGetProjectDetail","getProjectAllSaga","theoDoiGetAllProjectSaga","taskTypeService","getAllTaskType","getAllTaskTypeSaga","theoDoiGetAllTaskTypeSaga","priorityService","getAllPriority","getAllPrioritySaga","theoDoiGetAllPriority","taskService","createTask","getTaskDetail","updateStatusTask","taskStatusUpdate","updateTask","taskUpdate","createTaskSaga","theoDoiCreateTaskSaga","getTaskDetailSaga","theoDoiGetTaskDetailSaga","updateTaskStatusSaga","theoDoiUpdateTaskStatusSaga","updateTaskSaga","theoDoiUdpateTask","handelChangePostApi","theoDoiHandleChangePostApi","select","taskUpdateApi","statusService","getAllStatus","getAllStatusSaga","theoDoiGetAllStatusSaga","rootSaga","all","Cyberbugs","ProjectCategorySaga","ProjectSaga","StatusSaga","TaskTypeSaga","PrioritySaga","TaskSaga","historyState","usLogin","stateDefault","initialState","propsValue","alert","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","HistoryReducer","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c71ad256.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download (1).e96d3ef9.jfif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__2hv9a\"};","\r\nexport const DOMAIN_CYBERBUG = 'http://casestudy.cyberlearn.vn/api/';\r\n\r\nexport const TOKEN = 'ACCESSTOKEN';\r\nexport const USER_LOGIN = 'USER_LOGIN';\r\n\r\nexport const STATUS_CODE = {\r\n    SUCCESS : 200,\r\n    NOT_FOUND: 404,\r\n    SERVER_ERROR:500\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/download.1c8cee9f.jfif\";","import React from 'react'\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>Home</div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { connect, useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction CreateProject(props) {\r\n\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        handleChange,\r\n        handleSubmit,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\r\n    }, []);\r\n    const handleEditorChange = (content, editor) => {\r\n        setFieldValue('description', content)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\" m-5\">\r\n            <h3>Create Project</h3>\r\n            <form className=\"container\" onSubmit={handleSubmit} onChange={handleChange}>\r\n                <div className=\"form-group\">\r\n                    <p>Name</p>\r\n                    <input className=\"form-control\" name=\"projectName\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>Description</p>\r\n                    <Editor\r\n\r\n                        name=\"description\"\r\n\r\n                        init={{\r\n                            selector: 'textarea#myTextArea',\r\n\r\n                            height: 300,\r\n                            menubar: false,\r\n                            plugins: [\r\n                                'advlist autolink lists link image charmap print preview anchor',\r\n                                'searchreplace visualblocks code fullscreen',\r\n                                'insertdatetime media table paste code help wordcount'\r\n                            ],\r\n                            toolbar:\r\n                                'undo redo | formatselect | bold italic backcolor | \\\r\n                                alignleft aligncenter alignright alignjustify | \\\r\n                                bullist numlist outdent indent | removeformat | help'\r\n                        }}\r\n                        onEditorChange={handleEditorChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <select name=\"categoryId\" className=\"form-control\" onChange={handleChange}>\r\n                        {arrProjectCategory.map((item, index) => {\r\n                            return <option value={item.id} key={index}>{item.projectCategoryName}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Create project</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst createProjectForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        \r\n        return {\r\n            projectName: '',\r\n            description: '',\r\n            categoryId: props.arrProjectCategory[0]?.id\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n\r\n        props.dispatch({ \r\n            type: 'CREATE_PROJECT_SAGA',\r\n            newProject: values \r\n        })\r\n\r\n\r\n    },\r\n    displayName: 'CreateProjectFormik',\r\n})(CreateProject);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(createProjectForm);","import React from 'react'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { useDispatch } from 'react-redux'\r\nimport { GET_TASK_DETAIL_SAGA, UPDATE_STATUS_TASK_SAGA } from '../../../redux/constants/CyberBugs';\r\nexport default function ContentMain(props) {\r\n\r\n    const { projectDetail } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDragEnd = (result) => {\r\n        let {projectId,taskId} = JSON.parse( result.draggableId ); //Lấy ra chuỗi sau mỗi lần draggable\r\n\r\n        console.log({projectId,taskId} )\r\n        let { source, destination } = result;\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        if (source.index === destination.index && source.droppableId === destination.droppableId) {\r\n            return;\r\n        }\r\n        \r\n        \r\n\r\n        //gọi api cập nhật lại status\r\n        dispatch({\r\n            type: UPDATE_STATUS_TASK_SAGA,\r\n            taskUpdateStatus: {\r\n                \"taskId\": taskId,\r\n                \"statusId\": destination.droppableId,\r\n                \"projectId\":projectId\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCardTaskList = () => {\r\n        return <DragDropContext onDragEnd={handleDragEnd}>\r\n            {\r\n                projectDetail.lstTask?.map((taskListDetail, index) => {\r\n                    return <Droppable key={index} droppableId={taskListDetail.statusId}>\r\n                        {(provided) => {\r\n                            return <div className=\"card pb-2\" style={{ width: '17rem', height: 'auto' }} >\r\n                                <div className=\"card-header\">\r\n                                    {taskListDetail.statusName}\r\n                                </div>\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    key={index}\r\n                                    className=\"list-group list-group-flush\" style={{ height: '100%' }}>\r\n                                    {taskListDetail.lstTaskDeTail.map((task, index) => {\r\n                                        return <Draggable key={task.taskId.toString()} index={index} draggableId={JSON.stringify({projectId:task.projectId,taskId:task.taskId})}>\r\n                                            {(provided) => {\r\n                                                return <div\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.draggableProps}\r\n                                                    {...provided.dragHandleProps}\r\n                                                    key={index} className=\"list-group-item\" data-toggle=\"modal\" data-target=\"#infoModal\" onClick={() => {\r\n                                                        dispatch({ type: GET_TASK_DETAIL_SAGA, taskId: task.taskId });\r\n\r\n                                                    }}>\r\n                                                    <p className=\"font-weight-300\">\r\n                                                        {task.taskName}\r\n                                                    </p>\r\n                                                    <div className=\"block\" style={{ display: 'flex' }}>\r\n                                                        <div className=\"block-left\">\r\n                                                            <p className=\"text-danger\">{task.priorityTask.priority}</p>\r\n                                                            {/* <i className=\"fa fa-bookmark\" />\r\n                                        <i className=\"fa fa-arrow-up\" /> */}\r\n                                                        </div>\r\n                                                        <div className=\"block-right\">\r\n                                                            <div className=\"avatar-group\" style={{ display: 'flex' }}>\r\n                                                                {task.assigness.map((mem, index) => {\r\n                                                                    return <div className=\"avatar\" key={index}>\r\n                                                                        <img src={mem.avatar} alt={mem.avatar} />\r\n                                                                    </div>\r\n                                                                })}\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            }}\r\n                                        </Draggable>\r\n                                    })}\r\n\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        }}\r\n\r\n                    </Droppable>\r\n                })}\r\n\r\n        </DragDropContext>\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\" style={{ display: 'flex' }}>\r\n\r\n            {renderCardTaskList()}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n","export const USER_SIGNIN_API = 'USER_SIGNIN_API';\r\nexport const USLOGIN = 'USLOGIN';\r\n\r\n\r\nexport const GET_ALL_PROJECT_CATEGORY_SAGA = 'GET_ALL_PROJECT_CATEGORY_SAGA';\r\nexport const GET_ALL_PROJECT_CATEGORY = 'GET_ALL_PROJECT_CATEGORY';\r\n\r\nexport const GET_ALL_PRIORITY = 'GET_ALL_PRIORITY';\r\nexport const GET_ALL_PRIORITY_SAGA = 'GET_ALL_PRIORITY_SAGA';\r\n\r\nexport const GET_ALL_PROJECT = 'GET_ALL_PROJECT';\r\nexport const GET_ALL_PROJECT_SAGA = 'GET_ALL_PROJECT_SAGA';\r\n\r\nexport const GET_ALL_STATUS_SAGA = 'GET_ALL_STATUS_SAGA';\r\nexport const GET_ALL_STATUS = 'GET_ALL_STATUS';\r\n\r\nexport const GET_TASK_DETAIL_SAGA = 'GET_TASK_DETAIL_SAGA';\r\nexport const GET_TASK_DETAIL = 'GET_TASK_DETAIL';\r\n\r\n\r\nexport const CHANGE_TASK_MODAL = 'CHANGE_TASK_MODAL';\r\nexport const CHANGE_ASSIGNESS = 'CHANGE_ASSIGNESS';\r\nexport const REMOVE_USER_ASSIGN = 'REMOVE_USER_ASSIGN'\r\n\r\nexport const UPDATE_STATUS_TASK_SAGA = 'UPDATE_STATUS_TASK_SAGA';\r\n\r\n\r\nexport const UPDATE_TASK_SAGA = 'UPDATE_TASK_SAGA';\r\nexport const HANDLE_CHANGE_POST_API_SAGA = 'HANDLE_CHANGE_POST_API_SAGA';\r\n\r\nexport const GET_ALL_TASK_TYPE = 'GET_ALL_TASK_TYPE';\r\nexport const GET_ALL_TASK_TYPE_SAGA = 'GET_ALL_TASK_TYPE_SAGA';\r\n\r\nexport const GET_USER_BY_PROJECT_ID_SAGA = 'GET_USER_BY_PROJECT_ID_SAGA';\r\nexport const GET_USER_BY_PROJECT_ID = 'GET_USER_BY_PROJECT_ID';\r\n\r\nexport const DISPLAY_LOADING = 'DISPLAY_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';","import React from 'react'\r\n\r\nexport default function HeaderMain(props) {\r\n\r\n    const {projectDetail} = props;\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\" style={{ backgroundColor: 'white' }}>\r\n                    <li className=\"breadcrumb-item\">Project</li>\r\n                    <li className=\"breadcrumb-item\">CyberLearn</li>\r\n                    <li className=\"breadcrumb-item\">Project management</li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                        {projectDetail.projectName}\r\n                    </li>\r\n                </ol>\r\n            </nav>\r\n            \r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\n\r\nexport default function InfoMain(props) {\r\n\r\n    const {projectDetail} = props;\r\n\r\n    const renderAvatar = () => {\r\n        \r\n        \r\n        return projectDetail.members?.map((user,index) => {\r\n            return   <div key={index} className=\"avatar\">\r\n            <img src={user.avatar} alt={user.avatar} />\r\n        </div>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{projectDetail.projectName}</h3>\r\n\r\n            <section>\r\n                {ReactHtmlParser(projectDetail.description)}\r\n            </section>\r\n            <div className=\"info\" style={{ display: 'flex' }}>\r\n                <div className=\"search-block\">\r\n                    <input className=\"search\" />\r\n                    <i className=\"fa fa-search\" />\r\n                </div>\r\n                <div className=\"avatar-group\" style={{ display: 'flex' }}>\r\n                    {renderAvatar()}\r\n                </div>\r\n                <div style={{ marginLeft: 20 }} className=\"text\">Only My Issues</div>\r\n                <div style={{ marginLeft: 20 }} className=\"text\">Recently Updated</div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport ContentMain from '../../components/Cyberbugs/Main/ContentMain'\r\nimport HeaderMain from '../../components/Cyberbugs/Main/HeaderMain'\r\nimport InfoMain from '../../components/Cyberbugs/Main/InfoMain'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\n\r\n\r\n\r\nexport default function IndexCyberBugs(props) {\r\n\r\n    const {projectDetail} = useSelector(state => state.ProjectReducer)\r\n    const dispatch = useDispatch();\r\n\r\n    console.log('projectDetail',projectDetail)\r\n\r\n\r\n    useEffect(()=>{\r\n        \r\n        const {projectId} = props.match.params;\r\n        dispatch({\r\n            type:'GET_PROJECT_DETAIL',\r\n            projectId\r\n        });\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <HeaderMain projectDetail={projectDetail} />\r\n\r\n            <InfoMain projectDetail={projectDetail} />\r\n\r\n            <ContentMain projectDetail={projectDetail} />\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { Editor } from '@tinymce/tinymce-react'\r\nimport { withFormik } from 'formik';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nfunction FormEditProject(props) {\r\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,\r\n        setFieldValue\r\n    } = props;\r\n\r\n\r\n\r\n\r\n    // const submitForm = (e) => {\r\n    //     e.preventDefault();\r\n    //     alert('submit edit');\r\n    // }\r\n\r\n    //componentdidmount\r\n    useEffect(() => {\r\n\r\n        //Gọi api load project category \r\n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\r\n\r\n\r\n        //Load sự kiện submit lên drawer nút submit\r\n        dispatch({ type: 'SET_SUBMIT_EDIT_PROJECT', submitFunction: handleSubmit });\r\n        \r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const handleEditorChange = (content, editor) => {\r\n        setFieldValue('description', content)\r\n    }\r\n\r\n    return (\r\n        <form className=\"container-fuild\" onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project id</p>\r\n                        <input value={values.id} disabled className=\"form-control\" name=\"id\" />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project name</p>\r\n                        <input value={values.projectName} className=\"form-control\" name=\"projectName\" onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Project Category</p>\r\n                        <select className=\"form-control\" name=\"categoryId\" value={values.categoryId}>\r\n                            {arrProjectCategory?.map((item, index) => {\r\n                                return <option key={index} value={item.id}>\r\n                                    {item.projectCategoryName}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className=\"form-group\">\r\n                        <p className=\"font-weight-bold\">Description</p>\r\n                        <Editor\r\n\r\n                            name=\"description123\"\r\n                            initialValue={values.description}\r\n                            value = {values.description}\r\n                            init={{\r\n                                selector: 'textarea#myTextArea',\r\n                                height: 300,\r\n                            \r\n                                menubar: false,\r\n                                plugins: [\r\n                                    'advlist autolink lists link image charmap print preview anchor',\r\n                                    'searchreplace visualblocks code fullscreen',\r\n                                    'insertdatetime media table paste code help wordcount'\r\n                                ],\r\n                                toolbar:\r\n                                    'undo redo | formatselect | bold italic backcolor | \\\r\n        alignleft aligncenter alignright alignjustify | \\\r\n        bullist numlist outdent indent | removeformat | help'\r\n                            }}\r\n                            onEditorChange={handleEditorChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst EditProjectForm = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { projectEdit } = props;\r\n\r\n        return {\r\n            id: projectEdit?.id,\r\n            projectName: projectEdit.projectName,\r\n            description: projectEdit.description,\r\n            categoryId: projectEdit.categoryId\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n\r\n        //Khi người dùng bấm submit => đưa dữ liệu về backedn thông qua api\r\n        // const action = {\r\n        //     type:'UPDATE_PROJECT_SAGA',\r\n        //     prjectUpdate:values\r\n        // }\r\n        //Gọi saga\r\n        props.dispatch({\r\n            type:'UPDATE_PROJECT_SAGA',\r\n            prjectUpdate:values\r\n        })\r\n\r\n    },\r\n    displayName: 'EditProjectForm',\r\n})(FormEditProject);\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    projectEdit: state.ProjectReducer.projectEdit\r\n\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(EditProjectForm);","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Table, Tag, Space, Button, Avatar, Popconfirm, message, Popover, AutoComplete } from 'antd';\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { FormOutlined, DeleteOutlined,CloseSquareOutlined } from '@ant-design/icons'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport FormEditProject from '../../components/Cyberbugs/Forms/FormEditProject/FormEditProject';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function ProjectManagement(props) {\r\n    //Lấy dữ liệu từ reducer về component\r\n    const projectList = useSelector(state => state.ProjectCyberBugsReducer.projectList);\r\n    \r\n    const { userSearch } = useSelector(state => state.UserLoginCyberBugsReducer);\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const searchRef = useRef(null);\r\n\r\n    //Sử dụng useDispatch để gọi action\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        filteredInfo: null,\r\n        sortedInfo: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: 'GET_LIST_PROJECT_SAGA' })\r\n    }, [])\r\n\r\n    const handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n\r\n    const clearFilters = () => {\r\n        setState({ filteredInfo: null });\r\n    };\r\n\r\n    const clearAll = () => {\r\n        setState({\r\n            filteredInfo: null,\r\n            sortedInfo: null,\r\n        });\r\n    };\r\n\r\n    const setAgeSort = () => {\r\n        setState({\r\n            sortedInfo: {\r\n                order: 'descend',\r\n                columnKey: 'age',\r\n            },\r\n        });\r\n    };\r\n\r\n    let { sortedInfo, filteredInfo } = state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            sorter: (item2, item1) => {\r\n                return item2.id - item1.id;\r\n            },\r\n            sortDirections: ['descend'],\r\n\r\n        },\r\n        {\r\n            title: 'Project Name',\r\n            dataIndex: 'projectName',\r\n            key: 'projectName',\r\n            render: (text,record,index) => {\r\n                return <NavLink to={`/projectdetail/${record.id}`}> {text}</NavLink>\r\n            },\r\n            sorter: (item2, item1) => {\r\n                let projectName1 = item1.projectName?.trim().toLowerCase();\r\n                let projectName2 = item2.projectName?.trim().toLowerCase();\r\n                if (projectName2 < projectName1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n\r\n        },\r\n       \r\n\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'categoryName',\r\n            key: 'categoryName',\r\n            sorter: (item2, item1) => {\r\n                let categoryName1 = item1.categoryName?.trim().toLowerCase();\r\n                let categoryName2 = item2.categoryName?.trim().toLowerCase();\r\n                if (categoryName2 < categoryName1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'Creator',\r\n            // dataIndex: 'creator',\r\n            key: 'creator',\r\n            render: (text, record, index) => {\r\n                return <Tag color=\"green\">{record.creator?.name}</Tag>\r\n            },\r\n            sorter: (item2, item1) => {\r\n                let creator1 = item1.creator?.name.trim().toLowerCase();\r\n                let creator2 = item2.creator?.name.trim().toLowerCase();\r\n                if (creator2 < creator1) {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'Members',\r\n            key: 'members',\r\n            render: (text, record, index) => {\r\n                return <div>\r\n                    {record.members?.slice(0, 3).map((member, index) => {\r\n                        return (\r\n                            <Popover key={index} placement=\"top\" title=\"members\" content={() => {\r\n                                return <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Id</th>\r\n                                            <th>avatar</th>\r\n                                            <th>name</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {record.members?.map((item, index) => {\r\n                                            return <tr key={index}>\r\n                                                <td>{item.userId}</td>\r\n                                                <td><img src={item.avatar} width=\"30\" height=\"30\" style={{borderRadius:'15px'}} /></td>\r\n                                                <td>{item.name}</td>\r\n                                                <td>\r\n                                                    <button onClick={()=>{\r\n                                                        dispatch({\r\n                                                            type:'REMOVE_USER_PROJECT_API',\r\n                                                            userProject: {\r\n                                                                userId:item.userId,\r\n                                                                projectId: record.id\r\n                                                            }\r\n                                                        })\r\n\r\n                                                    }} className=\"btn btn-danger\" style={{borderRadius:'50%'}}>X</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            }}>\r\n                                <Avatar key={index} src={member.avatar} />\r\n                            </Popover>\r\n                        )\r\n                    })}\r\n\r\n                    {record.members?.length > 3 ? <Avatar>...</Avatar> : ''}\r\n\r\n                    <Popover placement=\"rightTop\" title={\"Add user\"} content={() => {\r\n                        return <AutoComplete\r\n\r\n                            options={userSearch?.map((user, index) => {\r\n                                return { label: user.name, value: user.userId.toString() }\r\n                            })}\r\n\r\n                            value={value}\r\n\r\n                            onChange={(text) => {\r\n                                setValue(text);\r\n                            }}\r\n\r\n                            onSelect={(valueSelect, option) => {\r\n                                //set giá trị của hộp thọa = option.label\r\n                                setValue(option.label);\r\n                                //Gọi api gửi về backend\r\n                                dispatch({\r\n                                    type: 'ADD_USER_PROJECT_API',\r\n                                    userProject: {\r\n                                        \"projectId\": record.id,\r\n                                        \"userId\": valueSelect\r\n                                    }\r\n                                })\r\n\r\n\r\n                            }}\r\n                            style={{ width: '100%' }} onSearch={(value) => {\r\n                                    \r\n                                if(searchRef.current) {\r\n                                    clearTimeout(searchRef.current);\r\n                                }\r\n                                searchRef.current = setTimeout(()=>{\r\n                                    dispatch({\r\n                                        type: 'GET_USER_API',\r\n                                        keyWord: value\r\n                                    })\r\n    \r\n                                },300)\r\n                               \r\n                            }} />\r\n                    }} trigger=\"click\">\r\n                        <Button style={{ borderRadius: '50%' }}>+</Button>\r\n                    </Popover>\r\n                </div>\r\n            }\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (text, record, index) => {\r\n                return <div>\r\n                    <button className=\"btn mr-2 btn-primary\" onClick={() => {\r\n                        const action = {\r\n                            type: 'OPEN_FORM_EDIT_PROJECT',\r\n                            title:'Edit Project',\r\n                            Component: <FormEditProject />,\r\n                        }\r\n\r\n                        //dispatch lên reducer nội dung drawer\r\n                        dispatch(action);\r\n                        //dispatch dữ liệu dòng hiện tai lên reducer\r\n                        const actionEditProject = {\r\n                            type: 'EDIT_PROJECT',\r\n                            projectEditModel: record\r\n                        }\r\n                        dispatch(actionEditProject);\r\n                    }}>\r\n                        <FormOutlined style={{ fontSize: 17 }} />\r\n                    </button>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this project?\"\r\n                        onConfirm={() => {\r\n                            dispatch({ type: 'DELETE_PROJECT_SAGA', idProject: record.id })\r\n                        }}\r\n\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <button className=\"btn btn-danger\">\r\n                            <DeleteOutlined style={{ fontSize: 17 }} />\r\n                        </button>\r\n                    </Popconfirm>\r\n\r\n                </div>\r\n            },\r\n        }\r\n    ];\r\n    return (\r\n        <div className=\"m-5\" style={{width: \"60%\"}}>\r\n            <h3>Project management</h3>\r\n            <Space style={{ marginBottom: 16 }}>\r\n                <Button onClick={setAgeSort}>Sort age</Button>\r\n                <Button onClick={clearFilters}>Clear filters</Button>\r\n                <Button onClick={clearAll}>Clear filters and sorters</Button>\r\n            </Space>\r\n            <Table columns={columns} rowKey={\"id\"} dataSource={projectList} onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const UserLoginTemplate = (props) => {\r\n\r\n    const [{width,height},setSize] = useState({width:Math.round(window.innerWidth),height:Math.round(window.innerHeight)});\r\n\r\n    useEffect(()=>{\r\n        window.onresize = () => {\r\n            setSize({\r\n                width: Math.round(window.innerWidth),\r\n                height:Math.round(window.innerHeight)\r\n            })\r\n        }\r\n    },[])\r\n\r\n\r\n    let {Component,...restRoute} =  props;\r\n\r\n    return <Route {...restRoute} render={(propsRoute)=>{\r\n        return <>\r\n            <Layout>\r\n                <Sider width={width/2} style={{height:height,backgroundImage:`url(https://picsum.photos/${Math.round(width/2)}/${height})`,backgroundSize:'100%'}}>\r\n                  \r\n                </Sider>\r\n                <Content>\r\n                    <Component {...propsRoute} />\r\n                </Content>\r\n            </Layout>\r\n      \r\n        </>\r\n    }} />\r\n\r\n}","import React from 'react'\r\nimport styleLoading from './LoadingComponent.module.css';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function LoadingComponent() {\r\n\r\n    const { isLoading } = useSelector(state => state.LoadingReducer)\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className={styleLoading.bgLoading}>\r\n                <img src={require('../../assets/imgLoading/loading.gif')} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Input } from 'antd';\r\nimport { UserOutlined, LockOutlined, TwitterOutlined } from '@ant-design/icons';\r\nimport { withFormik } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { singinCyberbugAction } from '../../redux/actions/CyberBugsAction'\r\nfunction LoginCyberBugs(props) {\r\n    const {\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n    } = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"container\" style={{ height: window.innerHeight }} >\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: window.innerHeight }} >\r\n                <h3 className=\"text-center\" style={{ fontWeight: 300, fontSize: 35 }}>Login cyberbugs</h3>\r\n                <div className=\"d-flex mt-3\" >\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} name=\"email\" size=\"large\" placeholder=\"Email\" prefix={<UserOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.email}</div>\r\n                <div className=\"d-flex mt-3\">\r\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"password\" name=\"password\" size=\"large\" placeholder=\"Password\" prefix={<LockOutlined />} />\r\n                </div>\r\n                <div className=\"text-danger\">{errors.password}</div>\r\n\r\n                <Button htmlType=\"submit\" size=\"large\" style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff' }} className=\"mt-5\">Login</Button>\r\n\r\n\r\n                <div className=\"social mt-3 d-flex\">\r\n                    <Button style={{ backgroundColor: 'rgb(59,89,152)' }} shape=\"circle\" size={\"large\"}>\r\n                        <span className=\"font-weight-bold\" style={{ color: '#fff' }} >F</span>\r\n                    </Button>\r\n                    <Button type=\"primary ml-3\" shape=\"circle\" icon={<TwitterOutlined />} size={\"large\"}>\r\n\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginCyberBugsWithFormik = withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        email: Yup.string().required('Email is required!').email('Email is invalid!'),\r\n        password: Yup.string().min(6, 'Password must have min 6 characters').max(32, 'password  have max 32 characters')\r\n\r\n    }),\r\n    handleSubmit: ({ email, password }, { props, setSubmitting }) => {\r\n        setSubmitting(true);\r\n        props.dispatch(singinCyberbugAction(email, password));\r\n    },\r\n    displayName: 'LoginCyberBugs',\r\n})(LoginCyberBugs);\r\n\r\n\r\n\r\n\r\nexport default connect()(LoginCyberBugsWithFormik);","import { USER_SIGNIN_API } from \"../constants/CyberBugs\"\r\n\r\n\r\n\r\nexport const singinCyberbugAction = (email, password) => {\r\n    console.log(\"signIn\")\r\n    return {\r\n        type: USER_SIGNIN_API,\r\n        userLogin: {\r\n            email: email,\r\n            password: password\r\n        }\r\n    }\r\n}","import React,{Fragment} from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nexport const HomeTemplate = (props) => {\r\n\r\n    const {Component,...restParam} = props;\r\n    return <Route {...restParam} render={(propsRoute)=>{\r\n        return <>\r\n            \r\n            <Component {...propsRoute} />\r\n        </>\r\n    }} />\r\n\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function MenuCyberbugs() {\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"account\">\r\n                <div className=\"avatar\">\r\n                    <img src={require(\"../../assets/img/download.jfif\")} alt=\"123\" />\r\n                </div>\r\n                <div className=\"account-info\">\r\n                    <p>NhanNguyen</p>\r\n                    <p>Report bugs</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"control\">\r\n                <div>\r\n                    <i className=\"fa fa-credit-card mr-1\" />\r\n                    <NavLink className=\"text-dark\" activeStyle={{color:'blue'}} to=\"/cyberbugs\" activeClassName=\"active font-weight-bold text-primary\" >Cyber Board</NavLink>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-cog mr-1\" /> \r\n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/projectmanagement' activeClassName=\"active font-weight-bold  text-primary\" >Project management</NavLink>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-cog mr-1\" /> \r\n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/createproject' activeClassName=\"active font-weight-bold  text-primary\" >Create project</NavLink>\r\n                </div>\r\n               \r\n            </div>\r\n            <div className=\"feature\">\r\n                <div>\r\n                    <i className=\"fa fa-truck mr-1\" />\r\n                    <span>Releases</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-equals mr-1\" />\r\n                    <span>Issues and filters</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-paste mr-1\" />\r\n                    <span>Pages</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-location-arrow mr-1\" />\r\n                    <span>Reports</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-box\" />\r\n                    <span>Components</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { GET_ALL_STATUS_SAGA } from '../../redux/constants/CyberBugs';\r\nimport { GET_ALL_PRIORITY_SAGA } from '../../redux/constants/CyberBugs';\r\nimport { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, HANDLE_CHANGE_POST_API_SAGA, REMOVE_USER_ASSIGN, UPDATE_STATUS_TASK_SAGA } from '../../redux/constants/CyberBugs';\r\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../redux/constants/CyberBugs';\r\nimport { Editor } from '@tinymce/tinymce-react'\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nexport default function ModalCyberBugs(props) {\r\n\r\n    const { taskDetailModal } = useSelector(state => state.TaskReducer);\r\n    const { arrStatus } = useSelector(state => state.StatusReducer);\r\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\r\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\r\n\r\n    const { projectDetail } = useSelector(state => state.ProjectReducer)\r\n    const [visibleEditor, setVisibleEditor] = useState(false);\r\n    const [historyContent, setHistoryContent] = useState(taskDetailModal.description);\r\n    const [content, setContent] = useState(taskDetailModal.description);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: GET_ALL_STATUS_SAGA });\r\n        dispatch({ type: GET_ALL_PRIORITY_SAGA });\r\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\r\n    }, [])\r\n\r\n\r\n    console.log('taskDetailModal', taskDetailModal)\r\n\r\n\r\n    const renderDescription = () => {\r\n        const jsxDescription = ReactHtmlParser(taskDetailModal.description);\r\n        return <div>\r\n            {visibleEditor ? <div> <Editor\r\n                name=\"description\"\r\n                initialValue={taskDetailModal.description}\r\n                init={{\r\n                    selector: 'textarea#myTextArea',\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                        'advlist autolink lists link image charmap print preview anchor',\r\n                        'searchreplace visualblocks code fullscreen',\r\n                        'insertdatetime media table paste code help wordcount'\r\n                    ],\r\n                    toolbar:\r\n                        'undo redo | formatselect | bold italic backcolor | \\\r\n                            alignleft aligncenter alignright alignjustify | \\\r\n                            bullist numlist outdent indent | removeformat | help'\r\n                }}\r\n                onEditorChange={(content, editor) => {\r\n                    setContent(content);\r\n                }}\r\n            />\r\n\r\n                <button className=\"btn btn-primary m-2\" onClick={() => {\r\n                    dispatch({\r\n                        type:HANDLE_CHANGE_POST_API_SAGA,\r\n                        actionType:CHANGE_TASK_MODAL,\r\n                        name: 'description',\r\n                        value: content\r\n                    })\r\n                    setVisibleEditor(false);\r\n                }}>Save</button>\r\n                <button className=\"btn btn-primary m-2\" onClick={() => {\r\n                    dispatch({\r\n                        type:HANDLE_CHANGE_POST_API_SAGA,\r\n                        actionType:CHANGE_TASK_MODAL,\r\n                        name: 'description',\r\n                        value: historyContent\r\n                    })\r\n                    setVisibleEditor(false)\r\n                }}>Close</button>\r\n            </div> : <div onClick={() => {\r\n\r\n                setHistoryContent(taskDetailModal.description);\r\n                setVisibleEditor(!visibleEditor);\r\n\r\n            }}>{jsxDescription}</div>}\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n\r\n        dispatch({\r\n            type:HANDLE_CHANGE_POST_API_SAGA,\r\n            actionType:CHANGE_TASK_MODAL,\r\n            name,\r\n            value\r\n        })\r\n    }\r\n    const renderTimeTracking = () => {\r\n\r\n        const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\r\n\r\n        const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\r\n        const percent = Math.round(Number(timeTrackingSpent) / max * 100)\r\n\r\n        return <div>\r\n            <div style={{ display: 'flex' }}>\r\n                <i className=\"fa fa-clock\" />\r\n                <div style={{ width: '100%' }}>\r\n\r\n                    <div className=\"progress\">\r\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={Number(timeTrackingSpent)} aria-valuemin={Number(timeTrackingRemaining)} aria-valuemax={max} />\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <p className=\"logged\">{Number(timeTrackingRemaining)}h logged</p>\r\n                        <p className=\"estimate-time\">{Number(timeTrackingRemaining)}h remaining</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-6\">\r\n                    <input className=\"form-control\" name=\"timeTrackingSpent\" onChange={handleChange} />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <input className=\"form-control\" name=\"timeTrackingRemaining\" onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"infoModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"infoModal\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-info\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"task-title\">\r\n                            <i className=\"fa fa-bookmark\" />\r\n                            <select name=\"typeId\" value={taskDetailModal.typeId} onChange={handleChange}>\r\n                                {arrTaskType.map((tp, index) => {\r\n                                    return <option key={index} value={tp.id}>{tp.taskType}</option>\r\n                                })}\r\n                            </select>\r\n\r\n                            <span>{taskDetailModal.taskName}</span>\r\n                        </div>\r\n                        <div style={{ display: 'flex' }} className=\"task-click\">\r\n                            <div>\r\n                                <i className=\"fab fa-telegram-plane\" />\r\n                                <span style={{ paddingRight: 20 }}>Give feedback</span>\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"fa fa-link\" />\r\n                                <span style={{ paddingRight: 20 }}>Copy link</span>\r\n                            </div>\r\n                            <i className=\"fa fa-trash-alt='xyz'\" style={{ cursor: 'pointer' }} />\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <p className=\"issue\">This is an issue of type: Task.</p>\r\n                                    <div className=\"description\">\r\n                                        <p>Description</p>\r\n                                        {renderDescription()}\r\n                                    </div>\r\n                                    <div className=\"comment\">\r\n                                        <h6>Comment</h6>\r\n                                        <div className=\"block-comment\" style={{ display: 'flex' }}>\r\n                                            <div className=\"avatar\">\r\n                                                <img src={require(\"../../assets/img/download (1).jfif\")} alt='xyz' />\r\n                                            </div>\r\n                                            <div className=\"input-comment\">\r\n                                                <input type=\"text\" placeholder=\"Add a comment ...\" />\r\n                                                <p>\r\n                                                    <span style={{ fontWeight: 500, color: 'gray' }}>Protip:</span>\r\n                                                    <span>press\r\n                        <span style={{ fontWeight: 'bold', background: '#ecedf0', color: '#b4bac6' }}>M</span>\r\n                        to comment</span>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"lastest-comment\">\r\n                                            <div className=\"comment-item\">\r\n                                                <div className=\"display-comment\" style={{ display: 'flex' }}>\r\n                                                    <div className=\"avatar\">\r\n                                                        <img src={require(\"../../assets/img/download (1).jfif\")} alt='xyz' />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p style={{ marginBottom: 5 }}>\r\n                                                            Lord Gaben <span>a month ago</span>\r\n                                                        </p>\r\n                                                        <p style={{ marginBottom: 5 }}>\r\n                                                            Lorem ipsum dolor sit amet, consectetur\r\n                                                            adipisicing elit. Repellendus tempora ex\r\n                                                            voluptatum saepe ab officiis alias totam ad\r\n                                                            accusamus molestiae?\r\n                        </p>\r\n                                                        <div>\r\n                                                            <span style={{ color: '#929398' }}>Edit</span>\r\n                          •\r\n                          <span style={{ color: '#929398' }}>Delete</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"status\">\r\n                                        <h6>STATUS</h6>\r\n                                        <select name=\"statusId\" className=\"custom-select\" value={taskDetailModal.statusId} onChange={(e) => {handleChange(e)}}>\r\n                                            {arrStatus.map((status, index) => {\r\n                                                return <option value={status.statusId} key={index}>{status.statusName}</option>\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"assignees\">\r\n                                        <h6>ASSIGNEES</h6>\r\n                                        <div className=\"row\">\r\n                                            {\r\n                                                taskDetailModal.assigness?.map((user, index) => {\r\n                                                    return <div className=\"col-6  mt-2 mb-2\" key={index}>\r\n                                                        <div key={index} style={{ display: 'flex' }} className=\"item\">\r\n\r\n\r\n                                                            <div className=\"avatar\">\r\n                                                                <img src={user.avatar} alt={user.avatar} />\r\n                                                            </div>\r\n                                                            <p className=\"name mt-1 ml-1\">\r\n                                                                {user.name}\r\n                                                                <i className=\"fa fa-times\" style={{ marginLeft: 5,cursor:'pointer' }}  onClick={() => {\r\n                                                                    \r\n                                                                    dispatch({\r\n                                                                        type:HANDLE_CHANGE_POST_API_SAGA,\r\n                                                                        actionType: REMOVE_USER_ASSIGN,\r\n                                                                        userId:user.id\r\n                                                                    })\r\n                                                                }}  />\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                })\r\n                                            }\r\n\r\n                                            <div className=\"col-6  mt-2 mb-2\">\r\n                                             \r\n                                                <Select \r\n                                                    options = {projectDetail.members?.filter(mem => {\r\n                                                        let index = taskDetailModal.assigness?.findIndex(us => us.id === mem.userId);\r\n                                                        if (index !== -1) {\r\n                                                            return false;\r\n                                                        }\r\n                                                        return true;\r\n                                                    }).map((mem, index) => {\r\n                                                        return {value:mem.userId,label:mem.name};\r\n                                                    })}\r\n                                                    optionFilterProp=\"label\"\r\n                                                    style={{ width: '100%' }}\r\n                                                    name=\"lstUser\"\r\n                                                    value=\"+ Add more\"\r\n                                                    className=\"form-control\"\r\n                                                    onSelect={(value) => {\r\n                                                        if (value == '0') {\r\n                                                            return;\r\n                                                        }\r\n                                                        let userSelected = projectDetail.members.find(mem => mem.userId == value);\r\n                                                        userSelected = { ...userSelected, id: userSelected.userId };\r\n\r\n                                                        dispatch({\r\n                                                            type:HANDLE_CHANGE_POST_API_SAGA,\r\n                                                            actionType: CHANGE_ASSIGNESS,\r\n                                                            userSelected\r\n                                                        })\r\n                                                    }}>\r\n                                                    \r\n                                                    \r\n                                                </Select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"priority\" style={{ marginBottom: 20 }}>\r\n                                        <h6>PRIORITY</h6>\r\n                                        <select name=\"priorityId\" className=\"form-control\" value={taskDetailModal.priorityId} onChange={(e) => {\r\n                                            handleChange(e);\r\n                                        }}>\r\n                                            {arrPriority.map((item, index) => {\r\n                                                return <option key={index} value={item.priorityId}>{item.priority}</option>\r\n                                            })}\r\n\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"estimate\">\r\n                                        <h6>ORIGINAL ESTIMATE (HOURS)</h6>\r\n                                        <input name=\"originalEstimate\" type=\"text\" className=\"estimate-hours\" value={taskDetailModal.originalEstimate} onChange={(e) => {\r\n                                            handleChange(e);\r\n                                        }} />\r\n                                    </div>\r\n                                    <div className=\"time-tracking\">\r\n                                        <h6>TIME TRACKING</h6>\r\n                                        {\r\n                                            renderTimeTracking()\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div style={{ color: '#929398' }}>Create at a month ago</div>\r\n                                    <div style={{ color: '#929398' }}>Update at a few seconds ago</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { Editor } from '@tinymce/tinymce-react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Select, Radio,Slider } from 'antd';\r\nimport {useSelector,useDispatch,connect} from 'react-redux'\r\nimport { GET_ALL_PROJECT_SAGA } from '../../../../redux/constants/CyberBugs';\r\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../../redux/constants/CyberBugs';\r\nimport { GET_ALL_PRIORITY_SAGA } from '../../../../redux/constants/CyberBugs';\r\n\r\nimport {withFormik} from 'formik';\r\n\r\nimport * as Yup from 'yup'\r\nimport { GET_ALL_STATUS_SAGA } from '../../../../redux/constants/CyberBugs';\r\nimport { GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../../../redux/constants/CyberBugs';\r\nconst { Option } = Select;\r\n\r\nconst children = [];\r\n\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\r\n}\r\n function FormCreateTask(props) {\r\n\r\n    //Lấy dữ liệu từ redux \r\n    const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\r\n    const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\r\n    const {arrPriority} = useSelector(state => state.PriorityReducer);\r\n    const {arrUser} = useSelector(state => state.UserLoginCyberBugsReducer);\r\n    const {arrStatus} = useSelector(state => state.StatusReducer);\r\n\r\n    console.log('arrStatus',arrStatus);\r\n    //Hàm biến đổi options cho thẻ select\r\n    const userOptions = arrUser.map((item,index) => {\r\n        return {value:item.userId,label:item.name}\r\n    })\r\n    //Do kết nối với withformik => component có các props\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n \r\n    \r\n    const [size, setSize] = React.useState('default');\r\n\r\n    const [timeTracking,setTimetracking] = useState({\r\n        timeTrackingSpent:0,\r\n        timeTrackingRemaining:0\r\n    })\r\n\r\n\r\n\r\n    //hook\r\n    useEffect(() => {\r\n        dispatch({type:GET_ALL_PROJECT_SAGA});\r\n        dispatch({type:GET_ALL_TASK_TYPE_SAGA});\r\n        dispatch({type:GET_ALL_PRIORITY_SAGA});\r\n        dispatch({type:GET_ALL_STATUS_SAGA});\r\n        //Đưa hàm handle submit lên drawer reducer để cập nhật lại sự kiện cho nút submitt\r\n        dispatch({type:'SET_SUBMIT_CREATE_TASK',submitFunction:handleSubmit})\r\n\r\n        dispatch({type:'GET_USER_API',keyWord:''});\r\n\r\n    },[])\r\n\r\n    \r\n    \r\n\r\n    const children = [];\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>          \r\n            <div className=\"form-group\">\r\n                <p>Project</p>\r\n                <select  name=\"projectId\" className=\"form-control\" onChange={(e) => {\r\n\r\n                    \r\n                    let {value} = e.target;\r\n                    dispatch({\r\n                        type:GET_USER_BY_PROJECT_ID_SAGA,\r\n                        idProject:value\r\n                    })\r\n                    //Cập nhật giá trị cho project Id\r\n                    setFieldValue('projectId',e.target.value);\r\n\r\n\r\n                }}>\r\n                   {arrProject.map((project,index)=>{\r\n                       return <option key={index} value={project.id}>{project.projectName}</option>\r\n                   })}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Task name</p>\r\n                <input name=\"taskName\" className=\"form-control\" onChange={handleChange} />\r\n            </div> \r\n            <div className=\"form-group\">\r\n                <p>Status</p>\r\n                <select name=\"statusId\" className=\"form-control\" onChange={handleChange}>\r\n                    {arrStatus.map((statusItem,index) => {\r\n                        return <option key={index} value={statusItem.statusId}>{statusItem.statusName}</option>\r\n                    })}\r\n                </select>\r\n            </div> \r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <p>Priority</p>\r\n                        <select name=\"priorityId\" className=\"form-control\" onChange={handleChange}>\r\n                            {arrPriority.map((priority,index)=>{\r\n                                return <option key={index} value={priority.priorityId}>\r\n                                    {priority.priority}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p>Task type</p>\r\n                        <select className=\"form-control\" name=\"typeId\" onChange={handleChange}>\r\n                            {arrTaskType.map((taskType,index)=>{\r\n                                return <option key={index} value={taskType.id}>{taskType.taskType}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                    <p>Assignees</p>\r\n                    <Select\r\n                            \r\n                            mode=\"multiple\"\r\n                            size={size}\r\n                            options={userOptions}\r\n                            placeholder=\"Please select\"\r\n                            optionFilterProp=\"label\"\r\n                            onChange={(values) => {\r\n                                //set lại giá trị cho lstUserAsign\r\n                                setFieldValue('listUserAsign',values);\r\n                            }}\r\n                            onSelect={(value) => { \r\n\r\n                              console.log(value)\r\n                        \r\n                            }}\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            {children}\r\n                    </Select>\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-12\">\r\n                            <p>Original Estimate</p>\r\n                            <input type=\"number\" min=\"0\" name=\"originalEstimate\" defaultValue=\"0\" className=\"form-control\" height=\"30\" onChange={handleChange}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                         <p>Time tracking</p>\r\n\r\n                        <Slider defaultValue={30} value={timeTracking.timeTrackingSpent} max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-left font-weight-bold\">{timeTracking.timeTrackingSpent}h logged</div>\r\n                            <div className=\"col-6 text-right font-weight-bold\">{timeTracking.timeTrackingRemaining}h remaining</div>\r\n                        </div>\r\n                        <div className=\"row\" style={{marginTop:5}}>\r\n                            <div className=\"col-6\">\r\n                                <p>Time spent</p>\r\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingSpent\" onChange={(e)=>{\r\n                                    setTimetracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingSpent:e.target.value\r\n                                    });\r\n\r\n                                    setFieldValue('timeTrackingSpent',e.target.value);\r\n                                }}/>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                                <p>Time remaining</p>\r\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingRemaining\"  onChange={(e)=>{\r\n                                    setTimetracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingRemaining:e.target.value\r\n                                    });\r\n                                    setFieldValue('timeTrackingRemaining',e.target.value);\r\n\r\n                                }}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Description</p>\r\n                <Editor\r\n                    name=\"description\"\r\n                    init={{\r\n                        selector: 'textarea#myTextArea',\r\n                        height: 500,\r\n                        menubar: false,\r\n                        plugins: [\r\n                            'advlist autolink lists link image charmap print preview anchor',\r\n                            'searchreplace visualblocks code fullscreen',\r\n                            'insertdatetime media table paste code help wordcount'\r\n                        ],\r\n                        toolbar:\r\n                            'undo redo | formatselect | bold italic backcolor | \\\r\n                            alignleft aligncenter alignright alignjustify | \\\r\n                            bullist numlist outdent indent | removeformat | help'\r\n                        }}\r\n                        onEditorChange={(content, editor) => {\r\n                            setFieldValue('description',content);\r\n                        }}\r\n                />\r\n            </div>\r\n            {/* <button type=\"submit\">submit</button> */}\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst frmCreateTask = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const {arrProject,arrTaskType,arrPriority,arrStatus} = props;\r\n\r\n\r\n        // if(arrProject?.length>0){\r\n        //     props.dispatch({type:GET_USER_BY_PROJECT_ID_SAGA,idProject:arrProject[0]?.id});\r\n        // }\r\n\r\n\r\n        return {\r\n            taskName: '',\r\n            description: '',\r\n            statusId: arrStatus[0]?.statusId,\r\n            originalEstimate: 0,\r\n            timeTrackingSpent:0,\r\n            timeTrackingRemaining:0,\r\n            projectId:arrProject[0]?.id,\r\n            typeId:arrTaskType[0]?.id,\r\n            priorityId:arrPriority[0]?.priorityId,\r\n            listUserAsign:[]\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        props.dispatch({type:'CREATE_TASK_SAGA',taskObject:values})\r\n        console.log('taskobject',values)\r\n    },\r\n    displayName: 'createTaskForm',\r\n})(FormCreateTask);\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        arrProject: state.ProjectCyberBugsReducer.arrProject,\r\n        arrTaskType:state.TaskTypeReducer.arrTaskType,\r\n        arrPriority:state.PriorityReducer.arrPriority,\r\n        arrStatus:state.StatusReducer.arrStatus,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps) (frmCreateTask);\r\n","import React, { useState } from 'react'\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    UserOutlined,\r\n    VideoCameraOutlined,\r\n    UploadOutlined,\r\n    BarsOutlined,\r\n    SearchOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport FormCreateTask from './Forms/FormCreateTask/FormCreateTask';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nexport default function SidebarCyberbugs() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({\r\n        collapsed: false,\r\n    })\r\n    const toggle = () => {\r\n        setState({\r\n            collapsed: !state.collapsed,\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n\r\n            <Sider trigger={null} collapsible collapsed={state.collapsed} style={{ height: '100%' }}>\r\n                <div className=\"text-right pr-2\" onClick={toggle} ><BarsOutlined style={{ cursor: 'pointer', color: '#fff', fontSize: 25 }} /></div>\r\n\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                    <Menu.Item key=\"1\" icon={<PlusOutlined style={{ fontSize: 20 }} />} onClick={()=>{\r\n                        dispatch({\r\n                            type:'OPEN_FORM_CREATE_TASK',\r\n                            Component:<FormCreateTask />,\r\n                            title:'Create task'\r\n                        })\r\n\r\n                    }}>\r\n                        <span className=\"mb-2\">Create task</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\r\n                        Search\r\n                     </Menu.Item>\r\n\r\n                </Menu>\r\n            </Sider>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport MenuCyberbugs from '../../components/Cyberbugs/MenuCyberbugs';\r\nimport ModalCyberBugs from '../../components/Cyberbugs/ModalCyberBugs';\r\nimport SidebarCyberbugs from '../../components/Cyberbugs/SidebarCyberbugs';\r\nimport '../../index.css';\r\n\r\n\r\n\r\nexport const CyberbugsTemplate = (props) => {\r\n\r\n    const { Component, ...restParam } = props;\r\n    return <Route {...restParam} render={(propsRoute) => {\r\n        return <>\r\n            <div className=\"jira\">\r\n                <SidebarCyberbugs />\r\n                <MenuCyberbugs />\r\n                    <Component {...propsRoute} />\r\n                <ModalCyberBugs />\r\n            </div>\r\n        </>\r\n    }} />\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nexport default function DrawerCyberBugs(props) {\r\n\r\n\r\n\r\n    const { visible, ComponentContentDrawer,callBackSubmit,title } = useSelector(state => state.drawerReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    console.log('visible', visible)\r\n\r\n\r\n    const showDrawer = () => {\r\n        dispatch({ type: 'OPEN_DRAWER' });\r\n    };\r\n\r\n    const onClose = () => {\r\n        dispatch({ type: 'CLOSE_DRAWER' });\r\n\r\n    };\r\n    return (\r\n        <>\r\n            {/* <button onClick={showDrawer}>showdrawer</button> */}\r\n            <Drawer\r\n                title={title}\r\n                width={720}\r\n                onClose={onClose}\r\n                visible={visible}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            textAlign: 'right',\r\n                        }}\r\n                    >\r\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={callBackSubmit} type=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {/* Nội dung thay đổi của drawer */}\r\n                {ComponentContentDrawer}\r\n     \r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home/Home';\nimport Contact from './pages/Contact/Contact';\nimport About from './pages/About/About';\nimport CreateProject from './pages/CreateProject/CreateProject';\nimport indexCyberBugs from './pages/ProjectDetail/indexCyberBugs';\nimport ProjectManagement from './pages/ProjectManagement/ProjectManagement';\n\nimport { UserLoginTemplate } from './templates/HomeTemplate/UserLoginTemplate';\nimport LoadingComponent from './components/LoadingComponent/LoadingComponent';\nimport LoginCyberBugs from './pages/LoginCyberBugs/LoginCyberBugs';\nimport { HomeTemplate } from './templates/HomeTemplate/HomeTemplate';\nimport { CyberbugsTemplate } from './templates/HomeTemplate/CyberbugsTemplate';\nimport DrawerCyberBugs from './HOC/DrawerCyberBugs';\nimport React, { Component } from 'react';\nfunction App() {\n  return (\n\n    <div>\n      <LoadingComponent />\n      <DrawerCyberBugs />\n      <Switch >\n        <HomeTemplate path=\"/home\" exact Component={Home} />\n\n        <CyberbugsTemplate exact path='/createproject' Component={CreateProject} />\n        <UserLoginTemplate exact path='/' Component={LoginCyberBugs} />\n        <CyberbugsTemplate exact path='/cyberbugs' Component={indexCyberBugs} />\n        <CyberbugsTemplate exact path='/projectmanagement' Component={ProjectManagement} />\n        <CyberbugsTemplate exact path='/projectdetail/:projectId' Component={indexCyberBugs} />\n      </Switch >\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const { default: Axios } = require(\"axios\")\r\nconst { DOMAIN_CYBERBUG, TOKEN } = require(\"../util/constants/settingSystem\")\r\n\r\nexport const cyberbugsService = { \r\n    signinCyberBugs: (userLogin) => {\r\n       return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/users/signin`,\r\n            method:'POST',\r\n            data: userLogin\r\n        }) \r\n    },\r\n    getAllProjectCategory: () => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/ProjectCategory`,\r\n            method: 'GET'\r\n        })\r\n    },\r\n    createProject: (newProject) => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/Project/createProject`,\r\n            method:'POST',\r\n            data:newProject\r\n        })\r\n    },\r\n    createProjectAuthorization : (newProject) => {\r\n        console.log(localStorage.getItem(TOKEN))\r\n        return Axios({\r\n            url: `${DOMAIN_CYBERBUG}/Project/createProjectAuthorize`,\r\n            method:'POST',\r\n            data:newProject,\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT \r\n        })\r\n    },\r\n    getListProject: () => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/Project/getAllProject`,\r\n            method:'GET',\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\r\n        })\r\n    },\r\n    updateProject: (projectUpdate) => { \r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/Project/updateProject?projectId=${projectUpdate.id}`,\r\n            method:'PUT',\r\n            data:projectUpdate,\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","import Axios from \"axios\"\r\nimport { DOMAIN_CYBERBUG, TOKEN } from \"../util/constants/settingSystem\"\r\n\r\nexport class baseService {\r\n    \r\n    put = (url,model) => {\r\n        return  Axios({\r\n            url:`${DOMAIN_CYBERBUG}/${url}`,\r\n            method:'PUT',\r\n            data:model,\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} \r\n        }) \r\n    }\r\n\r\n    post = (url,model) => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/${url}`,\r\n            method:'POST',\r\n            data:model,\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} \r\n        }) \r\n    }\r\n\r\n\r\n    get = (url) => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/${url}`,\r\n            method:'GET',\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} \r\n        })\r\n    }\r\n\r\n    delete = (url) => {\r\n        return Axios({\r\n            url:`${DOMAIN_CYBERBUG}/${url}`,\r\n            method:'DELETE',\r\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} \r\n        })\r\n    }\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class UserService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    getUser = (keyWord) => {\r\n        \r\n       return this.get(`Users/getUser?keyword=${keyWord}`);\r\n    }\r\n\r\n\r\n    assignUserProject = (userProject) => {\r\n        return this.post(`Project/assignUserProject`,userProject);\r\n    }\r\n\r\n\r\n    deleteUserFromProject = (userProject) => {\r\n        return this.post(`Project/removeUserFromProject`,userProject);\r\n    } \r\n\r\n\r\n    getUserByProjectId = (idProject) =>{ \r\n        return this.get(`Users/getUserByProjectId?idProject=${idProject}`)\r\n    }\r\n}\r\n\r\n\r\nexport const userService = new UserService();\r\n","import Axios from 'axios';\r\nimport { call, delay, fork, take, takeEvery, takeLatest, put, select } from 'redux-saga/effects';\r\nimport { cyberbugsService } from '../../../services/CyberbugsService';\r\nimport { USER_SIGNIN_API, USLOGIN } from '../../constants/CyberBugs';\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/CyberBugs';\r\nimport { STATUS_CODE, TOKEN, USER_LOGIN } from '../../../util/constants/settingSystem'\r\n\r\nimport { history } from '../../../util/history';\r\nimport { userService } from '../../../services/UserService';\r\nimport { GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../constants/CyberBugs';\r\nimport { array } from 'yup';\r\n\r\n//Quản lý các action saga\r\nfunction* signinSaga(action) {\r\n    \r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay(500);\r\n\r\n    //Gọi api \r\n    try {\r\n        const { data, status } = yield call(() => cyberbugsService.signinCyberBugs(action.userLogin));\r\n\r\n        //Lưu vào localstorage khi đăng nhập thành công\r\n        localStorage.setItem(TOKEN, data.content.accessToken);\r\n        localStorage.setItem(USER_LOGIN, JSON.stringify(data.content));\r\n\r\n\r\n        yield put({\r\n            type: USLOGIN,\r\n            userLogin: data.content\r\n        })\r\n\r\n        // let history = yield select(state=> state.HistoryReducer.history)\r\n\r\n        history.push('/home');\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n\r\n}\r\n\r\n\r\nexport function* theoDoiSignin() {\r\n    yield takeLatest(USER_SIGNIN_API, signinSaga);\r\n}\r\n\r\n\r\n\r\n\r\n//Quản lý các action saga\r\nfunction* getUserSaga(action) {\r\n\r\n    //action.keyWord\r\n    console.log(\"keyword\", action.keyWord);\r\n    //Gọi api \r\n    try {\r\n        const { data, status } = yield call(() => userService.getUser(action.keyWord));\r\n\r\n        yield put({\r\n            type: 'GET_USER_SEARCH',\r\n            lstUserSearch: data.content\r\n        })\r\n        console.log(\"data\", data);\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiGetUser() {\r\n    yield takeLatest(\"GET_USER_API\", getUserSaga);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//Quản lý các action saga\r\nfunction* addUserProjectSaga(action) {\r\n\r\n\r\n    try {\r\n        const { data, status } = yield call(() => userService.assignUserProject(action.userProject));\r\n\r\n        yield put({\r\n            type: 'GET_LIST_PROJECT_SAGA'\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiAddUserProject() {\r\n    yield takeLatest(\"ADD_USER_PROJECT_API\", addUserProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Quản lý các action saga\r\nfunction* removeUserProjectSaga(action) {\r\n\r\n\r\n    try {\r\n        const { data, status } = yield call(() => userService.deleteUserFromProject(action.userProject));\r\n\r\n        yield put({\r\n            type: 'GET_LIST_PROJECT_SAGA'\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiRemoveUserProject() {\r\n    yield takeLatest(\"REMOVE_USER_PROJECT_API\", removeUserProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\nfunction* getUserByProjectIdSaga(action) {\r\n    const { idProject } = action;\r\n    console.log('action',idProject)\r\n\r\n    try {\r\n        const { data, status } = yield call(() => userService.getUserByProjectId(idProject));\r\n        console.log('checkdata',data);\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type:GET_USER_BY_PROJECT_ID,\r\n                arrUser:data.content\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n        if(err.response?.data.statusCode === STATUS_CODE.NOT_FOUND) {\r\n            yield put({\r\n                type:GET_USER_BY_PROJECT_ID,\r\n                arrUser:[]\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiGetUserByProjectIdSaga() {\r\n    yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectIdSaga)\r\n}","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { GET_ALL_PROJECT_CATEGORY, GET_ALL_PROJECT_CATEGORY_SAGA } from \"../../constants/CyberBugs\";\r\n\r\nfunction* getAllProjectCategorySaga(action) {\r\n    console.log('actionSaga', action);\r\n\r\n    try {\r\n\r\n        //Gọi api lấy dữ liệu về\r\n        const { data, status } = yield call(() => cyberbugsService.getAllProjectCategory());\r\n\r\n\r\n\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: GET_ALL_PROJECT_CATEGORY,\r\n                data: data.content\r\n            });\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function* theoDoigetAllProjectCategory() {\r\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategorySaga);\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class ProjectService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    getAllProject = () => {\r\n        return this.get(`Project/getAllProject`);\r\n    }\r\n\r\n    deleteProject = (id) => {\r\n        \r\n       return this.delete(`Project/deleteProject?projectId=${id}`);\r\n    }\r\n\r\n    getProjectDetail = (projectId) => {\r\n        return this.get(`Project/getProjectDetail?id=${projectId}`);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const projectService = new ProjectService();\r\n","import { notification } from \"antd\"\r\n\r\nexport const notifiFunction = (type, message, description = '') => {\r\n    notification[type]({ //action.typeNotification = success | warning | info | error,\r\n        message: message,\r\n        description: description\r\n    })\r\n}","import { call, delay, put, takeLatest } from \"redux-saga/effects\";\r\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\r\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/CyberBugs\";\r\nimport {history} from '../../../util/history';\r\nimport { projectService } from \"../../../services/ProjectService\";\r\nimport { notifiFunction } from '../../../util/Notification/notificationCyberbugs'\r\nimport { GET_ALL_PROJECT, GET_ALL_PROJECT_SAGA } from \"../../constants/CyberBugs\";\r\nimport { GET_USER_BY_PROJECT_ID_SAGA } from \"../../constants/CyberBugs\";\r\nfunction* createProjectSaga(action) {\r\n\r\n    console.log('actionCreateProject',action)\r\n    //HIỂN THỊ LOADING\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay (500);\r\n\r\n    try {\r\n\r\n        //Gọi api lấy dữ liệu về\r\n        const { data, status } = yield call(() => cyberbugsService.createProjectAuthorization(action.newProject));\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data)\r\n\r\n            history.push('/projectmanagement');\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n   \r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function* theoDoiCreateProjectSaga() {\r\n    yield takeLatest('CREATE_PROJECT_SAGA', createProjectSaga);\r\n}\r\n\r\n\r\nfunction *getListProjectSaga(action) { \r\n\r\n    try {\r\n        const {data,status} = yield call( () => cyberbugsService.getListProject());\r\n \r\n        //Sau khi lấy dữ liệu từ api về thành công\r\n        if(status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type:'GET_LIST_PROJECT',\r\n                projectList:data.content\r\n            })\r\n\r\n\r\n         \r\n        }\r\n    }catch(err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function* theoDoiGetListProjectSaga() {\r\n    yield takeLatest('GET_LIST_PROJECT_SAGA', getListProjectSaga);\r\n}\r\n\r\n\r\nfunction* updateProjectSaga(action) {\r\n\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay (500);\r\n\r\n    try {\r\n\r\n        \r\n        const { data, status } = yield call(() => cyberbugsService.updateProject(action.prjectUpdate));\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data)\r\n\r\n            \r\n        }\r\n        \r\n        yield call(getListProjectSaga);\r\n        yield put({\r\n            type:'CLOSE_DRAWER'\r\n        })\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n   \r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiUpdateProjectSaga() {\r\n    yield takeLatest('UPDATE_PROJECT_SAGA', updateProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\n//UpdateProject\r\nfunction* deleteProjectSaga(action) {\r\n    // console.log('action123',action);\r\n    // return;\r\n    //HIỂN THỊ LOADING\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay (500);\r\n\r\n    try {\r\n        const { data, status } = yield call(() => projectService.deleteProject(action.idProject));\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data)\r\n\r\n            notifiFunction('success','Delete project successfully !')\r\n\r\n            // history.push('/projectmanagement');\r\n        }else {\r\n            notifiFunction('error','Delete project fail !')\r\n        }\r\n        // yield put({\r\n        //     type:'GET_LIST_PROJECT_SAGA'\r\n        // })\r\n        yield call(getListProjectSaga);\r\n        yield put({\r\n            type:'CLOSE_DRAWER'\r\n        })\r\n    } catch (err) {\r\n        notifiFunction('error','Delete project fail !')\r\n        console.log(err);\r\n    }\r\n   \r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiDeleteProject() {\r\n    yield takeLatest('DELETE_PROJECT_SAGA', deleteProjectSaga);\r\n}\r\n\r\n\r\n\r\n\r\nfunction* getProjectDetailSaga(action) {\r\n    // console.log('action123',action);\r\n    // return;\r\n    //HIỂN THỊ LOADING\r\n    // yield put({\r\n    //     type: DISPLAY_LOADING\r\n    // })\r\n    yield delay (500);\r\n\r\n    try {\r\n        const { data, status } = yield call(() => projectService.getProjectDetail(action.projectId));\r\n        \r\n        console.log('data',data);\r\n        //Lấy dữ liệu thành công thì đưa dữ liệu lên redux\r\n        yield put({\r\n            type:'PUT_PROJECT_DETAIL',\r\n            projectDetail:data.content\r\n        })\r\n    \r\n    } catch (err) {\r\n        console.log('404 not found !')\r\n        history.push('/projectmanagement');\r\n    }\r\n   \r\n    // yield put({\r\n    //     type: HIDE_LOADING\r\n    // })\r\n}\r\n\r\nexport function* theoDoiGetProjectDetail() {\r\n    yield takeLatest('GET_PROJECT_DETAIL', getProjectDetailSaga);\r\n}\r\n\r\n\r\n\r\nfunction* getProjectAllSaga(action) {\r\n    // console.log('action123',action);\r\n    // return;\r\n    //HIỂN THỊ LOADING\r\n    yield put({\r\n        type: DISPLAY_LOADING\r\n    })\r\n    yield delay (500);\r\n\r\n    try {\r\n        const { data, status } = yield call(() => projectService.getAllProject());\r\n        \r\n      \r\n        //Lấy dữ liệu thành công thì đưa dữ liệu lên redux\r\n        yield put({\r\n            type:GET_ALL_PROJECT,\r\n            arrProject:data.content\r\n        })\r\n\r\n        yield put({\r\n            type:GET_USER_BY_PROJECT_ID_SAGA,\r\n            idProject:data.content[0].id\r\n        })\r\n    \r\n    } catch (err) {\r\n        console.log('404 not found !')\r\n        history.push('/projectmanagement');\r\n    }\r\n   \r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\nexport function* theoDoiGetAllProjectSaga() {\r\n    yield takeLatest(GET_ALL_PROJECT_SAGA, getProjectAllSaga);\r\n}\r\n\r\n","import { baseService } from \"./baseService\";\r\n\r\nexport class TaskTypeService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n    getAllTaskType = () => {\r\n        return this.get('TaskType/getAll');\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const taskTypeService = new TaskTypeService();\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { taskTypeService } from \"../../../services/TaskTypeService\";\r\nimport { GET_ALL_TASK_TYPE, GET_ALL_TASK_TYPE_SAGA } from \"../../constants/CyberBugs\";\r\n\r\nfunction * getAllTaskTypeSaga (action) {\r\n\r\n    try {\r\n        const {data,status} = yield call(()=> taskTypeService.getAllTaskType());\r\n\r\n        yield put({\r\n            type: GET_ALL_TASK_TYPE,\r\n            arrTaskType:data.content\r\n        })\r\n\r\n\r\n\r\n    }catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport function * theoDoiGetAllTaskTypeSaga () {\r\n    yield takeLatest(GET_ALL_TASK_TYPE_SAGA,getAllTaskTypeSaga)\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class PriorityService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    getAllPriority = () => {\r\n        return this.get(`Priority/getAll`);\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\nexport const priorityService = new PriorityService();\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { priorityService } from \"../../../services/PriorityService\";\r\nimport { GET_ALL_PRIORITY, GET_ALL_PRIORITY_SAGA } from \"../../constants/CyberBugs\";\r\n\r\nfunction * getAllPrioritySaga(action) {\r\n    try {\r\n        const {data,status} = yield call(()=> priorityService.getAllPriority());\r\n\r\n        yield put({type:GET_ALL_PRIORITY,arrPriority:data.content});\r\n\r\n\r\n    }catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function * theoDoiGetAllPriority() {\r\n    yield takeLatest(GET_ALL_PRIORITY_SAGA,getAllPrioritySaga)\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class TaskService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n    createTask = (taskObject) => {\r\n        return this.post('Project/createTask',taskObject);\r\n    }\r\n\r\n\r\n    getTaskDetail = (taskId) => {\r\n        return this.get(`Project/getTaskDetail?taskId=${taskId}`)\r\n    }\r\n\r\n    updateStatusTask = (taskStatusUpdate) => {\r\n        return this.put(`Project/updateStatus`,taskStatusUpdate);\r\n    }\r\n    updateTask = (taskUpdate) => {\r\n        return this.post(`Project/updateTask`,taskUpdate);\r\n    }\r\n}   \r\n\r\n\r\nexport const taskService = new TaskService();","import { call, put, select, takeLatest } from 'redux-saga/effects'\r\nimport { taskService } from '../../../services/TaskService'\r\nimport { STATUS_CODE } from '../../../util/constants/settingSystem';\r\nimport { notifiFunction } from '../../../util/Notification/notificationCyberbugs'\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/CyberBugs';\r\nimport { HANDLE_CHANGE_POST_API_SAGA, GET_TASK_DETAIL_SAGA, GET_TASK_DETAIL, UPDATE_STATUS_TASK_SAGA, UPDATE_TASK_SAGA, CHANGE_TASK_MODAL, CHANGE_ASSIGNESS, REMOVE_USER_ASSIGN } from '../../constants/CyberBugs'\r\nfunction* createTaskSaga(action) {\r\n\r\n    try {\r\n        yield put({\r\n            type: DISPLAY_LOADING\r\n        })\r\n        const { data, status } = yield call(() => taskService.createTask(action.taskObject));\r\n\r\n        //Gọi api thành công thì dispatch lên reducer thông qua put\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data)\r\n\r\n        }\r\n        yield put({\r\n            type: 'CLOSE_DRAWER'\r\n        })\r\n        notifiFunction('success', 'Create task successfully !');\r\n    }\r\n    catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\n\r\nexport function* theoDoiCreateTaskSaga() {\r\n    yield takeLatest('CREATE_TASK_SAGA', createTaskSaga);\r\n}\r\n\r\n\r\n\r\n\r\nfunction* getTaskDetailSaga(action) {\r\n\r\n    const { taskId } = action;\r\n\r\n    try {\r\n        const { data, status } = yield call(() => taskService.getTaskDetail(taskId));\r\n\r\n        yield put({\r\n            type: GET_TASK_DETAIL,\r\n            taskDetailModal: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport function* theoDoiGetTaskDetailSaga(action) {\r\n\r\n    yield takeLatest(GET_TASK_DETAIL_SAGA, getTaskDetailSaga)\r\n\r\n}\r\n\r\n//update task \r\n\r\nfunction* updateTaskStatusSaga(action) {\r\n\r\n    const { taskUpdateStatus } = action;\r\n    console.log(action)\r\n    try {\r\n\r\n        //Cập nhật api status cho task hiện tại (Task đang mở modal)\r\n        const { data, status } = yield call(() => taskService.updateStatusTask(taskUpdateStatus));\r\n\r\n        //Sau khi thành công gọi lại getProjectDetail saga để sắp xếp lại thông tin các task \r\n        // console.log(data)\r\n        if (status == STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: 'GET_PROJECT_DETAIL',\r\n                projectId: taskUpdateStatus.projectId\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: taskUpdateStatus.taskId\r\n            })\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        console.log(err.response?.data);\r\n\r\n    }\r\n}\r\n\r\nexport function* theoDoiUpdateTaskStatusSaga() {\r\n    yield takeLatest(UPDATE_STATUS_TASK_SAGA, updateTaskStatusSaga)\r\n}\r\n\r\n\r\n\r\n\r\nfunction* updateTaskSaga(action) {\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport function* theoDoiUdpateTask() {\r\n    yield takeLatest(UPDATE_TASK_SAGA, updateTaskSaga);\r\n}\r\n\r\n\r\n\r\n\r\nexport function* handelChangePostApi(action) {\r\n    // console.log('abc', action)\r\n    //Gọi action làm thay đổi taskDetail modal\r\n    switch (action.actionType) {\r\n        case CHANGE_TASK_MODAL: {\r\n            const { value, name } = action;\r\n\r\n            yield put({\r\n                type: CHANGE_TASK_MODAL,\r\n                name,\r\n                value\r\n            });\r\n        };break;\r\n        case CHANGE_ASSIGNESS: {\r\n            const { userSelected } = action;\r\n            yield put({\r\n                type: CHANGE_ASSIGNESS,\r\n                userSelected\r\n            })\r\n\r\n        };break;\r\n        case REMOVE_USER_ASSIGN: {\r\n            const { userId } = action;\r\n            yield put({\r\n                type: REMOVE_USER_ASSIGN,\r\n                userId\r\n            })\r\n        }break;\r\n    }\r\n\r\n    //Save qua api updateTaskSaga\r\n    //Lây dữ liệu từ state.taskDetailModal \r\n    let { taskDetailModal } = yield select(state => state.TaskReducer);\r\n    console.log('taskDetailModal sau khi thay đổi', taskDetailModal)\r\n    //Biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần\r\n\r\n    const listUserAsign = taskDetailModal.assigness?.map((user, index) => {\r\n        return user.id;\r\n    });\r\n\r\n\r\n    const taskUpdateApi = { ...taskDetailModal, listUserAsign }\r\n    try {\r\n        const { data, status } = yield call(() => taskService.updateTask(taskUpdateApi));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: 'GET_PROJECT_DETAIL',\r\n                projectId: taskUpdateApi.projectId\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: taskUpdateApi.taskId\r\n            })\r\n        }\r\n    } catch(err) {\r\n        console.log(err.response?.data);\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiHandleChangePostApi() {\r\n    yield takeLatest(HANDLE_CHANGE_POST_API_SAGA, handelChangePostApi);\r\n}\r\n","import { baseService } from \"./baseService\";\r\n\r\nexport class StatusService extends baseService {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    getAllStatus = () => {\r\n        return this.get(`Status/getAll`)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const statusService = new StatusService();\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { statusService } from \"../../../services/StatusService\";\r\nimport { GET_ALL_STATUS, GET_ALL_STATUS_SAGA } from \"../../constants/CyberBugs\";\r\n\r\nfunction * getAllStatusSaga (action) {\r\n\r\n    try {\r\n        const {data,status} = yield call(()=> statusService.getAllStatus());\r\n\r\n        yield put({\r\n            type: GET_ALL_STATUS,\r\n            arrStatus:data.content\r\n        })\r\n\r\n\r\n    }catch(err) {\r\n        console.log(err);\r\n        console.log(err.response?.data)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function *theoDoiGetAllStatusSaga() {\r\n\r\n    yield takeLatest(GET_ALL_STATUS_SAGA, getAllStatusSaga)\r\n\r\n}","import * as Cyberbugs from './Cyberbugs/UserCyberbugsSaga';\r\n\r\nimport * as ProjectCategorySaga from './Cyberbugs/ProjectCategorySaga';\r\nimport * as ProjectSaga from './Cyberbugs/ProjectSaga';\r\nimport * as TaskTypeSaga from './Cyberbugs/TaskTypeSaga';\r\nimport * as PrioritySaga from './Cyberbugs/PrioritySaga';\r\nimport * as TaskSaga from './Cyberbugs/TaskSaga';\r\nimport * as StatusSaga from './Cyberbugs/StatusSaga'\r\nimport { all } from \"redux-saga/effects\";\r\nexport function * rootSaga (){\r\n    console.log(\"root Saga\")\r\n    yield all([\r\n        Cyberbugs.theoDoiSignin(),\r\n        Cyberbugs.theoDoiGetUser(),\r\n        Cyberbugs.theoDoiRemoveUserProject(),\r\n        Cyberbugs.theoDoiAddUserProject(),\r\n        Cyberbugs.theoDoiGetUserByProjectIdSaga(),\r\n        \r\n        ProjectCategorySaga.theoDoigetAllProjectCategory(),\r\n\r\n        ProjectSaga.theoDoiCreateProjectSaga(),\r\n        ProjectSaga.theoDoiGetListProjectSaga(),\r\n        ProjectSaga.theoDoiUpdateProjectSaga(),\r\n        ProjectSaga.theoDoiDeleteProject(),\r\n        ProjectSaga.theoDoiGetProjectDetail(),\r\n        ProjectSaga.theoDoiGetAllProjectSaga(),\r\n\r\n        StatusSaga.theoDoiGetAllStatusSaga(),\r\n\r\n\r\n        TaskTypeSaga.theoDoiGetAllTaskTypeSaga(),\r\n\r\n\r\n        PrioritySaga.theoDoiGetAllPriority(),\r\n    \r\n        TaskSaga.theoDoiCreateTaskSaga(),\r\n        TaskSaga.theoDoiGetTaskDetailSaga(),\r\n        TaskSaga.theoDoiUpdateTaskStatusSaga(),\r\n        TaskSaga.theoDoiHandleChangePostApi(),\r\n        TaskSaga.theoDoiUdpateTask()\r\n    ])\r\n}","\r\n\r\n\r\nconst historyState = {\r\n    history:{}\r\n};\r\n\r\n\r\n\r\nexport const HistoryReducer = (state = historyState,action) => {\r\n    switch(action.type) {\r\n        case 'ADD_HISTORY':{\r\n            state.history = action.history;\r\n            console.log(state.history);\r\n            return {...state}\r\n        }\r\n        default: return {...state}\r\n    }\r\n}","import { USLOGIN } from \"../constants/CyberBugs\";\r\nimport { GET_USER_BY_PROJECT_ID } from \"../constants/CyberBugs\";\r\n\r\nconst { USER_LOGIN } = require(\"../../util/constants/settingSystem\");\r\n\r\nlet usLogin = {};\r\n\r\nif(localStorage.getItem(USER_LOGIN)) {\r\n    usLogin = JSON.parse(localStorage.getItem(USER_LOGIN));\r\n}\r\n\r\n\r\n\r\n\r\nconst stateDefault =  {\r\n    userLogin : usLogin,\r\n    userSearch: [],\r\n    arrUser:[]//Array user cho thẻ select create task\r\n\r\n}\r\n\r\n\r\n\r\nexport const UserLoginCyberBugsReducer = (state = stateDefault,action) => {\r\n    switch(action.type) {\r\n        case USLOGIN: {\r\n            state.userLogin = action.userLogin;\r\n            return {...state}\r\n        }\r\n\r\n        case 'GET_USER_SEARCH' :{\r\n            state.userSearch = action.lstUserSearch;\r\n            console.log('stateUser',state);\r\n            return {...state}\r\n        }\r\n        case GET_USER_BY_PROJECT_ID: {\r\n            return  {...state,arrUser:action.arrUser}\r\n        }\r\n\r\n        default : return {...state};\r\n    }\r\n}","import { GET_ALL_PROJECT_CATEGORY } from \"../constants/CyberBugs\";\r\n\r\n\r\nconst stateDefault = {\r\n    arrProjectCategory : []\r\n}\r\n\r\n\r\n\r\n\r\nexport const ProjectCategoryReducer = (state = stateDefault,action) => {\r\n    switch(action.type){\r\n\r\n        case GET_ALL_PROJECT_CATEGORY: {\r\n            state.arrProjectCategory = action.data;\r\n            return {...state}\r\n        }\r\n\r\n\r\n        default : return {...state}\r\n    }\r\n}","import { GET_ALL_PROJECT } from \"../constants/CyberBugs\";\r\n\r\n\r\nconst stateDefault = {\r\n    projectList: [],\r\n    arrProject: [] //Get allproject cho dropdown\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const ProjectCyberBugsReducer = (state = stateDefault,action) => {\r\n    \r\n\r\n    switch(action.type){\r\n\r\n        case 'GET_LIST_PROJECT': {\r\n                state.projectList = action.projectList;\r\n                console.log(\"projectList\",action.projectList)\r\n                return {...state};\r\n        }\r\n\r\n        case GET_ALL_PROJECT : {\r\n            // state.arrProject = action.arrProject;\r\n            return {...state,arrProject:action.arrProject}\r\n        }\r\n\r\n        default: return {...state}\r\n    }\r\n}","import React from 'react'\r\nconst initialState = {\r\n    visible: false,\r\n    title:'',\r\n    ComponentContentDrawer: <p>default</p>,\r\n    callBackSubmit: (propsValue) => { alert('click demo!') }\r\n}\r\n\r\nexport const drawerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'OPEN_DRAWER':\r\n            return { ...state, visible: true }\r\n        case 'CLOSE_DRAWER':\r\n            return { ...state, visible: false }\r\n        case 'OPEN_FORM_EDIT_PROJECT': {\r\n            state.visible = true;\r\n            state.ComponentContentDrawer = action.Component;\r\n            state.title = action.title;\r\n            return { ...state }\r\n\r\n        }\r\n        case 'SET_SUBMIT_EDIT_PROJECT': {\r\n            state.callBackSubmit = action.submitFunction;\r\n            return {...state};\r\n        }\r\n\r\n        case 'SET_SUBMIT_CREATE_TASK' : {\r\n            return {...state,callBackSubmit:action.submitFunction}\r\n        }\r\n\r\n        case 'OPEN_FORM_CREATE_TASK' : {\r\n            console.log(\"open form\")\r\n            state.visible = true;\r\n            state.title = action.title;\r\n            state.ComponentContentDrawer = action.Component;\r\n            return {...state};\r\n\r\n        }\r\n\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","\r\nconst initialState = {\r\n    projectEdit: {\r\n        \"id\": 0,\r\n        \"projectName\": \"string\",\r\n        \"creator\": 0,\r\n        \"description\": \"string\",\r\n        \"categoryId\": \"2\"\r\n      },\r\n    projectDetail:{\r\n        \r\n    }\r\n}\r\n\r\nexport const ProjectReducer =  (state = initialState,  action) => {\r\n    switch (action.type) {\r\n    \r\n    case  'EDIT_PROJECT': {\r\n        state.projectEdit = action.projectEditModel;\r\n        return {...state}\r\n\r\n    }\r\n    case 'PUT_PROJECT_DETAIL': {\r\n        state.projectDetail = action.projectDetail;\r\n        return {...state}\r\n    } \r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { GET_ALL_TASK_TYPE } from \"../constants/CyberBugs\"\r\n\r\nconst initialState = {\r\n    arrTaskType: []\r\n}\r\n\r\nexport const TaskTypeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_ALL_TASK_TYPE:\r\n        return { ...state, arrTaskType:action.arrTaskType }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { GET_ALL_PRIORITY } from \"../constants/CyberBugs\"\r\n\r\nconst initialState = {\r\n    arrPriority : []\r\n}\r\n\r\nexport const PriorityReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_ALL_PRIORITY:\r\n        return { ...state,arrPriority:action.arrPriority }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { GET_ALL_STATUS } from \"../constants/CyberBugs\"\r\n\r\nconst initialState = {\r\n    arrStatus:[]\r\n}\r\n\r\nexport const StatusReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_ALL_STATUS:\r\n\r\n        // state.arrStatus = action.arrStatus;\r\n        return { ...state,arrStatus :action.arrStatus }\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, GET_TASK_DETAIL, REMOVE_USER_ASSIGN } from \"../constants/CyberBugs\"\r\n\r\nconst initialState = {\r\n    taskDetailModal:  {\r\n      \"priorityTask\": {\r\n        \"priorityId\": 1,\r\n        \"priority\": \"High\"\r\n      },\r\n      \"taskTypeDetail\": {\r\n        \"id\": 1,\r\n        \"taskType\": \"bug\"\r\n      },\r\n      \"assigness\": [\r\n        {\r\n          \"id\": 68,\r\n          \"avatar\": \"https://ui-avatars.com/api/?name=khải\",\r\n          \"name\": \"khải\",\r\n          \"alias\": \"khai\"\r\n        },\r\n        {\r\n          \"id\": 69,\r\n          \"avatar\": \"https://ui-avatars.com/api/?name=thoa\",\r\n          \"name\": \"thoa\",\r\n          \"alias\": \"thoa\"\r\n        }\r\n      ],\r\n      \"lstComment\": [],\r\n      \"taskId\": 54,\r\n      \"taskName\": \"task 1\",\r\n      \"alias\": \"task-1\",\r\n      \"description\": \"<p>Before you start work on an issue, you can set a time or other type of estimate to calculate how much work you believe it'll take to resolve it. Once you've started to work on a specific issue, log time to keep a record of it.</p>\\n<p>&nbsp;</p>\\n<ul>\\n<li>Open the issue and select&nbsp;&bull;&bull;&bull; &gt;&nbsp;Time tracking</li>\\n<li>Fill in the<strong>&nbsp;Time Spent</strong>&nbsp;field</li>\\n<li>Fill in the <strong>Time Remaining</strong> field and click Save</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h3><u>That's it!</u></h3>\\n<h1>💯💯</h1>\\n<p>&nbsp;</p>\",\r\n      \"statusId\": \"2\",\r\n      \"originalEstimate\": 30,\r\n      \"timeTrackingSpent\": 10,\r\n      \"timeTrackingRemaining\": 10,\r\n      \"typeId\": 1,\r\n      \"priorityId\": 1,\r\n      \"projectId\": 109\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const TaskReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n\r\n    case GET_TASK_DETAIL: {\r\n        console.log(action.taskDetailModal);\r\n        return {...state,taskDetailModal:action.taskDetailModal}\r\n    }\r\n    case CHANGE_TASK_MODAL: {\r\n      const {name,value} = action;\r\n      console.log('value',value)\r\n      // console.log(state.taskDetailModal)\r\n      return {...state,taskDetailModal: {...state.taskDetailModal,[name]:value}}\r\n    }\r\n\r\n    case CHANGE_ASSIGNESS : {\r\n\r\n      state.taskDetailModal.assigness = [...state.taskDetailModal.assigness,action.userSelected];\r\n      // console.log('state',state)\r\n      return {...state}\r\n    }\r\n\r\n    case REMOVE_USER_ASSIGN:{\r\n\r\n      state.taskDetailModal.assigness = [...state.taskDetailModal.assigness.filter(us => us.id !== action.userId)]\r\n      return {...state}\r\n    }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/CyberBugs\";\r\n\r\nconst initialState = {\r\n    isLoading:false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case DISPLAY_LOADING:\r\n        state.isLoading = true;\r\n        return { ...state }\r\n    case HIDE_LOADING:{\r\n        state.isLoading=false;\r\n        return {...state}\r\n    }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport createMiddleWareSaga from 'redux-saga';\r\nimport { rootSaga } from './sagas/rootSaga';\r\nimport { HistoryReducer } from './reducers/HistoryReducer';\r\nimport { UserLoginCyberBugsReducer } from './reducers/UserCyberBugsReducer';\r\nimport { ProjectCategoryReducer } from './reducers/ProjectCategoryReducer';\r\nimport { ProjectCyberBugsReducer } from './reducers/ProjectCyberBugsReducer';\r\nimport { drawerReducer } from './reducers/DrawerCyberbugs';\r\nimport { ProjectReducer } from './reducers/ProjectReducer';\r\nimport { TaskTypeReducer } from './reducers/TaskTypeReducer';\r\nimport { PriorityReducer } from './reducers/PriorityReducer';\r\nimport { StatusReducer } from './reducers/StatusReducer';\r\nimport {TaskReducer} from './reducers/TaskReducer';\r\nimport LoadingReducer from './reducers/LoadingReducer';\r\n\r\nconst middleWareSaga = createMiddleWareSaga();\r\n\r\nconst rootReducer = combineReducers({\r\n    // declare reducer\r\n    LoadingReducer,\r\n    HistoryReducer,\r\n    UserLoginCyberBugsReducer,\r\n    ProjectCategoryReducer,\r\n    ProjectCyberBugsReducer,\r\n    drawerReducer,\r\n    ProjectReducer,\r\n    TaskTypeReducer,\r\n    PriorityReducer,\r\n    StatusReducer,\r\n    TaskReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware( middleWareSaga));\r\n// call saga\r\nmiddleWareSaga.run(rootSaga)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//setup redux\nimport store from './redux/configStore'\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport { BrowserRouter,Router } from 'react-router-dom';\nimport {history} from './util/history'\n\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n  ,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}